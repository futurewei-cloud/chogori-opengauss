FROM quay.io/centos/centos:stream8

ENV GAUSSHOME /opt/opengauss

RUN yum -y update && yum clean all && yum -y install vim gdb valgrind systemd bzip2 bzip2-devel curl libaio wget tree net-tools java-1.8.0-openjdk-devel cmake clang openssl openssl-devel llvm llvm-devel llvm-libs redhat-lsb-core glibc-langpack-en gcc-toolset-9-libatomic-devel libaio-devel ncurses-devel pam-devel libffi-devel python3 python3-devel libnsl
RUN yum -y groupinstall "Development Tools"
RUN alternatives --set python /usr/bin/python3

RUN cd / && \
    wget https://opengauss.obs.cn-south-1.myhuaweicloud.com/2.1.0/openGauss-third_party_binarylibs.tar.gz && \
    tar zxvf openGauss-third_party_binarylibs.tar.gz && rm -f openGauss-third_party_binarylibs.tar.gz
RUN cd /openGauss-third_party_binarylibs/buildtools/centos7.6_x86_64/ && \
    ln -s gcc7.3 gcc8.5 && \
    mkdir -p /usr/lib64/huawei && \
    echo '/usr/lib64/huawei' > /etc/ld.so.conf.d/huawei-x86_64.conf && \
    cp /openGauss-third_party_binarylibs/platform/centos7.6_x86_64/Huawei_Secure_C/Dynamic_Lib/libsecurec.so /usr/lib64/huawei/
RUN rm -rf /openGauss-third_party_binarylibs/dependency/centos7.6_x86_64/boost

RUN cd /tmp && \
    git clone --recursive https://github.com/dmlc/xgboost && \
    cd xgboost && \
    mkdir build && \
    cd build && \
    cmake .. && \
    make -j && \
    make install

RUN groupadd dbgrp && \
    useradd -m -G dbgrp omm -s /bin/bash && \
    echo "Test3456" | passwd --stdin omm
RUN mkdir -p ${GAUSSHOME} && chown omm ${GAUSSHOME} -R
RUN su - omm -c 'echo "export GAUSSHOME=/opt/opengauss" >> .bashrc' && \
    su - omm -c 'echo "export PATH=$GAUSSHOME/bin:$PATH" >> .bashrc' && \
    su - omm -c 'echo "export LD_LIBRARY_PATH=$GAUSSHOME/lib:/usr/local/lib:/usr/lib:/lib:$LD_LIBRARY_PATH" >> .bashrc' && \
    su - omm -c 'echo "export GS_CLUSTER_NAME=dbCluster" >> .bashrc' && \
    su - omm -c 'echo "export GAUSSLOG=$GAUSSHOME/logs" >> .bashrc' && \
    su - omm -c 'echo "export PGDATA=$GAUSSHOME/data" >> .bashrc'

RUN cd /tmp && \
    wget https://boostorg.jfrog.io/artifactory/main/release/1.71.0/source/boost_1_71_0.tar.gz && \
    tar -xvzf boost_1_71_0.tar.gz && \
    cd boost_1_71_0 && \
    ./bootstrap.sh --without-libraries=python && \
    ./b2 -j8 && \
    ./b2 install

RUN cd /tmp && \
    git clone https://github.com/fmtlib/fmt.git  && cd fmt && git checkout tags/8.1.1 && \
    mkdir build && cd build && cmake -DCMAKE_CXX_FLAGS='-D_GLIBCXX_USE_CXX11_ABI=0' -DCMAKE_POSITION_INDEPENDENT_CODE=ON ../ && make -j install

# for running with chogori-platform (i.e., k2)
RUN cd /tmp && \
    git clone https://github.com/futurewei-cloud/chogori-platform.git && cd chogori-platform && git checkout tags/0.8.7 && cd ../ && \
    cd chogori-platform/src/logging && mkdir build && cd build && cmake -DCMAKE_CXX_FLAGS='-D_GLIBCXX_USE_CXX11_ABI=0' -DCMAKE_POSITION_INDEPENDENT_CODE=ON ../ && make -j install && \
    cd ../../skvhttpclient && mkdir build && cd build && cmake -DCMAKE_CXX_FLAGS='-D_GLIBCXX_USE_CXX11_ABI=0' -DCMAKE_POSITION_INDEPENDENT_CODE=ON ../ && make -j install

RUN cd /tmp && \
    git clone https://github.com/nlohmann/json.git  && cd json && git checkout tags/v3.11.1 && \
    mkdir build && cd build && cmake -DCMAKE_CXX_FLAGS='-D_GLIBCXX_USE_CXX11_ABI=0' -DCMAKE_POSITION_INDEPENDENT_CODE=ON ../ && make -j install

RUN pip3 install msgpack requests

VOLUME [ "/build" ]
WORKDIR /build
CMD ["/usr/bin/bash"]